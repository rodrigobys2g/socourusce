<?php
/**
 * Smart Commerce do Brasil
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@e-smart.com.br so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.e-smart.com.br for more information.
 *
 * @category    Esmart
 * @package     Esmart_SmartCheckout
 * @copyright   Copyright (c) 2012 Smart Commerce do Brasil. (http://www.e-smart.com.br)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
 
 /**
 * 
 *
 * @category    Esmart
 * @package     Esmart_SmartCheckout
 * @author      Tiago Sampaio <tiago.sampaio@e-smart.com.br>
 */
?>
var quoteBaseGrandTotal = <?php echo (float)$this->_getQuote()->getBaseGrandTotal(); ?>;
var isGiftCardApplied = <?php if($this->isFullyPaidAfterApplication()): ?>true<?php else: ?>false<?php endif; ?>;
if (quoteBaseGrandTotal < 0.0001 && isGiftCardApplied) {
    Payment.prototype.init = function () {
        var elements = Form.getElements(this.form);
        var method = null;
        for (var i=0; i < elements.length; i++) {
            if (elements[i].name == 'payment[method]' && elements[i].value == 'free') {
                elements[i].checked = true;
                method = 'free';
            } else {
                elements[i].disabled = true;
                (elements[i]).parentNode.hide();
                if(elements[i].name == 'payment[method]'){
                    $methodForm = $('container_payment_method_' + elements[i].value);
                    if($methodForm){
                        $methodForm.hide();
                    }
                }
            }
        }
        if (method) this.switchMethod(method);
    };
}
payment.init();
Payment.prototype.init = function () {};
